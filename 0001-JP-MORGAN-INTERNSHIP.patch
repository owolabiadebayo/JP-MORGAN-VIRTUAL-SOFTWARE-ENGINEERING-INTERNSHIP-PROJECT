From d30c00650b342eeab227bf0e4f612902c75ad2c8 Mon Sep 17 00:00:00 2001
From: Owolab Adebayo stephen <Owolabiadebayo78@yahoo.com>
Date: Tue, 23 Jun 2020 22:44:09 +0100
Subject: [PATCH] JP MORGAN INTERNSHIP

---
 client3.py     | 30 +++++++++++++++++-------------
 client_test.py | 36 ++++++++++++++++++++++++++++++------
 server3.py     | 22 +---------------------
 3 files changed, 48 insertions(+), 40 deletions(-)

diff --git a/client3.py b/client3.py
index 9c8bb83..079b4e3 100644
--- a/client3.py
+++ b/client3.py
@@ -1,5 +1,3 @@
-
-
 import urllib.request
 import time
 import json
@@ -32,16 +30,22 @@ def getRatio(price_a, price_b):
 	return price_a/price_b
 
 # Main
+#import library
 if __name__ == "__main__":
+   		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+   		prices = {}
+   		for quote in quotes:
+			   stock, bid_price, ask_price, price = getDataPoint(quote)
+			   prices[stock]= price
+			   print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+			   print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
+
+
+			    
+				
+    	
+
 
-	# Query the price once every N seconds.
-	for _ in range(N):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
-		#update the getRatio output so as to return a value other than 1
-		print ("Ratio %s" % getRatio(3.5,2.6))
+ 		 
+	 	 
+ 		 
\ No newline at end of file
diff --git a/client_test.py b/client_test.py
index 166cc14..8039c30 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import *
++from client import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -9,19 +9,43 @@ class ClientTest(unittest.TestCase):
     ]
     """ ------------ Add the assertion below ------------ """
     for quote in quotes:
-      self.assertEqual {getDataPoint(quote), {quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], {quote['top_bid']['price'] + quote['top_ask']['price']}/2}}
-
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+    
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-    for quote in quotes:
-      self.assertEqual {getDataPoint(quote), {quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], {quote['top_bid']['price'] + quote['top_ask']['price']}/2}}
+ for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+ 
+ 
+   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_priceBZero(self):
+    price_a = 119.2
+    price_b = 0
+    self.assertIsNone(getRatio(price_a, price_b))
+ 
+  def test_getRatio_priceAZero(self):
+    price_a = 0
+    price_b = 121.68
+    self.assertEqual(getRatio(price_a, price_b), 0)
+ 
+  def test_getRatio_greaterThan1(self):
+    price_a = 346.48
+    price_b = 166.39
+    self.assertGreater(getRatio(price_a, price_b), 1)
 
-  """ ------------ Add more unit tests ------------ """
+  def test_getRatio_LessThan1(self):
+    price_a = 166.39
+    price_b = 356.48
+    self.assertLess(getRatio(price_a, price_b), 1)
 
+  def test_getRatio_exactlyOne(self):
+    price_a = 356.48
+    price_b = 356.48
+    self.assertEqual(getRatio(price_a, price_b), 1)
 
 
 if __name__ == '__main__':
diff --git a/server3.py b/server3.py
index 2de4e28..d912d5c 100644
--- a/server3.py
+++ b/server3.py
@@ -1,24 +1,4 @@
-################################################################################
-#
-#  Permission is hereby granted, free of charge, to any person obtaining a
-#  copy of this software and associated documentation files (the "Software"),
-#  to deal in the Software without restriction, including without limitation
-#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
-#  and/or sell copies of the Software, and to permit persons to whom the
-#  Software is furnished to do so, subject to the following conditions:
-#
-#  The above copyright notice and this permission notice shall be included in
-#  all copies or substantial portions of the Software.
-#
-#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-#  DEALINGS IN THE SOFTWARE.
-
-#from itertools import izip
+
 from random    import normalvariate, random
 from datetime  import timedelta, datetime
 
-- 
2.27.0.windows.1

